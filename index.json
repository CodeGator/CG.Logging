{
  "api/Microsoft.Extensions.DependencyInjection.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.html",
    "title": "Namespace Microsoft.Extensions.DependencyInjection",
    "keywords": "Namespace Microsoft.Extensions.DependencyInjection Classes ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection types, for registering types related to logging"
  },
  "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions",
    "keywords": "Class ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection types, for registering types related to logging Inheritance System.Object ServiceCollectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.Extensions.DependencyInjection Assembly : CG.Logging.dll Syntax public static class ServiceCollectionExtensions Methods AddLogging(IServiceCollection, IConfiguration, ServiceLifetime) This method adds strategies for logging to the specified service collection. Declaration public static IServiceCollection AddLogging(this IServiceCollection serviceCollection, IConfiguration configuration, ServiceLifetime serviceLifetime = ServiceLifetime.Scoped) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. IConfiguration configuration The configuration to use for the operation. Microsoft.Extensions.DependencyInjection.ServiceLifetime serviceLifetime The service lifetime to use for the operation. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection The value of the serviceCollection parameter, for chaining calls together."
  },
  "api/Microsoft.Extensions.Hosting.ApplicationBuilderExtensions.html": {
    "href": "api/Microsoft.Extensions.Hosting.ApplicationBuilderExtensions.html",
    "title": "Class ApplicationBuilderExtensions",
    "keywords": "Class ApplicationBuilderExtensions This class contains extension methods related to the types, for registering types related to logging. Inheritance System.Object ApplicationBuilderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.Extensions.Hosting Assembly : CG.Logging.dll Syntax public static class ApplicationBuilderExtensions Methods UseLogging(IApplicationBuilder, IWebHostEnvironment, IConfiguration) This method wires up any startup logic required for the logging services. Declaration public static IApplicationBuilder UseLogging(this IApplicationBuilder applicationBuilder, IWebHostEnvironment hostEnvironment, IConfiguration configuration) Parameters Type Name Description IApplicationBuilder applicationBuilder The application builder to use for the operation. IWebHostEnvironment hostEnvironment The hosting environment to use for the application. IConfiguration configuration The configuration to use for the operation. Returns Type Description IApplicationBuilder The value of the applicationBuilder parameter, for chaining calls together."
  },
  "api/Microsoft.Extensions.Hosting.html": {
    "href": "api/Microsoft.Extensions.Hosting.html",
    "title": "Namespace Microsoft.Extensions.Hosting",
    "keywords": "Namespace Microsoft.Extensions.Hosting Classes ApplicationBuilderExtensions This class contains extension methods related to the types, for registering types related to logging."
  },
  "api/Microsoft.Extensions.Logging.BootstrapLogger.html": {
    "href": "api/Microsoft.Extensions.Logging.BootstrapLogger.html",
    "title": "Class BootstrapLogger",
    "keywords": "Class BootstrapLogger This class contains a bootstrap logger Inheritance System.Object BootstrapLogger Implements Microsoft.Extensions.Logging.ILogger Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.Extensions.Logging Assembly : CG.Logging.dll Syntax public sealed class BootstrapLogger : ILogger Constructors BootstrapLogger() This constructor creates a new instance of the BootstrapLogger class. Declaration public BootstrapLogger() Methods Instance() This method returns the singleton instance of BootstrapLogger Declaration public static ILogger Instance() Returns Type Description Microsoft.Extensions.Logging.ILogger The singleton instance of BootstrapLogger LogLevelToCritical() This method sets the minimum logger level to critical. Declaration public static void LogLevelToCritical() Remarks This method must be called before the Instance() method is called, for it to have any effect. LogLevelToDebug() This method sets the minimum logger level to debug. Declaration public static void LogLevelToDebug() Remarks This method must be called before the Instance() method is called, for it to have any effect. LogLevelToError() This method sets the minimum logger level to error. Declaration public static void LogLevelToError() Remarks This method must be called before the Instance() method is called, for it to have any effect. LogLevelToInformation() This method sets the minimum logger level to information. Declaration public static void LogLevelToInformation() Remarks This method must be called before the Instance() method is called, for it to have any effect. LogLevelToTrace() This method sets the minimum logger level to trace. Declaration public static void LogLevelToTrace() Remarks This method must be called before the Instance() method is called, for it to have any effect. LogLevelToWarning() This method sets the minimum logger level to warning. Declaration public static void LogLevelToWarning() Remarks This method must be called before the Instance() method is called, for it to have any effect. Explicit Interface Implementations ILogger.IsEnabled(LogLevel) This method checks if the given logLevel is enabled. Declaration bool ILogger.IsEnabled(LogLevel logLevel) Parameters Type Name Description Microsoft.Extensions.Logging.LogLevel logLevel Level to be checked. Returns Type Description System.Boolean true if enabled. Implements Microsoft.Extensions.Logging.ILogger"
  },
  "api/Microsoft.Extensions.Logging.html": {
    "href": "api/Microsoft.Extensions.Logging.html",
    "title": "Namespace Microsoft.Extensions.Logging",
    "keywords": "Namespace Microsoft.Extensions.Logging Classes BootstrapLogger This class contains a bootstrap logger"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction",
    "keywords": "Introduction CG.Logging.dll contains logging extensions used by other CodeGator packages."
  }
}